#!raku

use Sparky::JobApi;

%*ENV<SP6_DUMP_TASK_CODE> = False;

bash "raku -V > rakuenv.txt";

Sparky::JobApi.new(:mine).put-file("rakuenv.txt","rakuenv.txt");

my $badge = "![Sparky](https://sparky.sparrowhub.io/badge/{tags()<SPARKY_PROJECT>}?foo=bar)";

"badge.txt".IO.spurt($badge);

Sparky::JobApi.new(:mine).put-file("badge.txt","badge.txt");

directory "scm";

bash q:to /BASH/, %( :description<setup git> );
  git config --global url."https://github.com/".insteadOf git@github.com:
BASH

git-scm tags()<SCM_URL>, %(
  to => "scm",
  branch => tags<SCM_BRANCH>
);

bash "git show --oneline -s > gitinfo.txt", %(
  cwd => "{$*CWD}/scm"
);

Sparky::JobApi.new(:mine).put-file("scm/gitinfo.txt","gitinfo.txt");

# bash "zef --version";

zef "Tomty", %( :notest );

if "scm/init.raku".IO ~~ :e {
    say "init from scm/init.raku";
    EVALFILE "scm/init.raku";
}

my %env = %( SP6_LOG_NO_TIMESTAMPS => 1 );

%env<SP6_DUMP_TASK_CODE> = 1 if tags()<Dump>;

my $opts = tags()<Verbose> ?? "--all --verbose" !! "--all --show-failed";

bash "tomty $opts --color", %(
  cwd => "{$*CWD}/scm",
  envvars => %env,
);

