#!raku

use Sparky::JobApi;

%*ENV<SP6_DUMP_TASK_CODE> = False;

bash "raku -V > rakuenv.txt";

Sparky::JobApi.new(:mine).put-file("rakuenv.txt","rakuenv.txt");

my %envvars;

%envvars<pwshell_distr> = "https://github.com/PowerShell/PowerShell/releases/download/v7.3.7/powershell-7.3.7-linux-arm64.tar.gz";

bash q:to /BASH/, %( description => "install pwshell", envvars => %envvars );

set -e

export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1

sudo apt-get update -yq
sudo apt-get install -yq \
ruby-dev ruby-bundler \
python3-pip python3-dev python3-pytest \
carton cpanminus \
libc6 \
libgcc1 \
libgcc-s1 \
libgssapi-krb5-2 \
libicu74 \
liblttng-ust1 \
libssl3 \
libstdc++6 \
libunwind8 \
zlib1g

# Download the powershell '.tar.gz' archive

curl -L -o /tmp/powershell.tar.gz $pwshell_distr

# Create the target folder where powershell will be placed
sudo mkdir -p /opt/microsoft/powershell/7

# Expand powershell to the target folder
sudo tar zxf /tmp/powershell.tar.gz -C /opt/microsoft/powershell/7

# Set execute permissions
sudo chmod +x /opt/microsoft/powershell/7/pwsh

# Create the symbolic link that points to pwsh
sudo ln -s /opt/microsoft/powershell/7/pwsh /usr/bin/pwsh
pwsh --version

BASH


directory "scm";

say "current commit is: {tags()<SCM_SHA>}";

git-scm tags()<SCM_URL>, %(
  to => "scm",
  branch => tags<SCM_BRANCH>
);

bash "git show --oneline -s > gitinfo.txt", %(
  cwd => "{$*CWD}/scm"
);

Sparky::JobApi.new(:mine).put-file("scm/gitinfo.txt","gitinfo.txt");

bash "zef install . --force-install", %(
  cwd => "{$*CWD}/scm"
);

bash q:to /BASH/, %( description => "tests", cwd => "{$*CWD}/scm", envvars => %envvars );
  set -e
  set -x
  s6 --index-update
  tomty --profile=ci --all --show-failed --color 
BASH

zef "fez";

my $s = task-run "git data", "git-commit-data", %(
  :dir<scm>,
);

say "sha: ", $s<sha>;
say "comment: ", $s<comment>;

if $s<comment> eq "release!" {
  bash q:to /BASH/, %( description => "fez upload", cwd => "{$*CWD}/scm" );
   set -e
     tom --clean
     tomty --clean
     timeout 30 fez upload 
  BASH
}
